<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>个人博客搭建（mac）</title>
    <link href="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/"/>
    <url>/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/</url>
    
    <content type="html"><![CDATA[<p>记载博客的搭建，使用Hexo+Github</p><h1 id="详细流程"><a href="#详细流程" class="headerlink" title="详细流程"></a>详细流程</h1><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p><strong>以下环境依次安装</strong></p><p>需按顺序在终端中安装，homebrew要提前装好，一般为在终端输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;<br></code></pre></td></tr></table></figure><p>更详细见官网：<a href="https://brew.sh/">https://brew.sh</a> ，或者寻找教程。</p><p>1:安装Node.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">brew install node<br></code></pre></td></tr></table></figure><p>2:安装Git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">brew install git<br></code></pre></td></tr></table></figure><p>3:安装hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>桌面新建文件夹 Blog</p><p>进入blog文件夹：<code>cd Desktop/Blog</code></p><p>初始化：<code>hexo init</code></p><p>启动hexo：<code>hexo s</code>  (<code>hero start</code>简写)</p><p>进入博客的默认网站：<a href="http://localhost:4000/">http://localhost:4000</a></p><p>可以见到已经默认生成了一篇博文</p><p>新建一篇博文，终端输）：<code>hexo n &quot;发布第一篇个人博客&quot;</code>  （<code>hexo new</code>简写）</p><p>此时在Desktop&#x2F;Blog&#x2F;sourse&#x2F;_posts 文件夹下可以看到刚刚建立的**”发布第一篇个人博客.md”**的文件</p><p>利用Markdown编辑器可以对内容进行更改，比如输入：内容测试</p><p>终端在在Blog文件下输入：</p><p>清理：<code>hexo c</code>  (<code>hexo clean</code>)<br>生成：<code>hexo g</code>  (<code>hexo generate</code>)<br>启动：<code>hexo s</code>  (<code>hero start</code>)</p><h2 id="与Github同步"><a href="#与Github同步" class="headerlink" title="与Github同步"></a>与Github同步</h2><p>1:新建或登录github账号：<a href="https://github.com/">https://github.com</a></p><p>2:新创建一个仓库New repository，**仓库名必须为：<code>昵称.github.io</code>**（昵称中有大写字母要全部改为小写）</p><p>，（可选：输入描述），<strong>选择类型为：Public</strong></p><ol start="3"><li><p>终端中<strong>ctrl+c，退出命令</strong>，退出后默认会依然<strong>在Blog目录下</strong>。在目录下安装git部署插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>进入Blog文件夹，找到<strong>“_config.yml”</strong>文件并打开，做如下修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mac"># Deployment<br>## Docs: https://hexo.io/docs/deployment.html<br>deploy:<br>  type: git<br>  repo: https://github.com/username1/username2.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure></li></ol><p>username1为你的用户名（包含大写）</p><p>username2为大写改为小写的用户名</p><p>也就是说将type改为git，将repo：后内容改为**”仓库网址.git”**。</p><p>仓库网址可以在浏览器上查看。</p><p>在终端Blog目录命令下，利用代码将本地同步到GitHub上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">hexo d<br></code></pre></td></tr></table></figure><p>中间会让输入github账户名与密码，账户名为邮箱，</p><p>密码采取可以采取不同授权方式（在这里我暂时采取了方式一）</p><p>方式一：个人令牌</p><ol><li><p>打开Github个人主页，右击头像，在呼出菜单中选择Settings</p></li><li><p>在左侧菜单中选择Developer settings</p></li><li><p>左侧菜单选择Personal access tokens</p></li><li><p>选择授权时间，授权权限（个人使用方方便的话可以全开）</p></li><li><p>点击Generate Code生成</p></li><li><p>将生成的密钥复制，输入到终端对应需要密码的地方。</p></li></ol><p>方式二：SSH密钥(暂未使用，便不介绍了)</p><p>之后便可以进行同步了。方式一的密钥过期后需要重新生成。</p><p>注意在渲染时要选择正确的分支：</p><p>比如我的文件同步到master分支上，那么渲染时要在master分支上渲染，而默认分支为main，因此需要做一些调整。</p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/1.png" alt="fig1"></p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/2.png" alt="fig2"></p><h3 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h3><p>可在这查找主题：**<a href="https://hexo.io/themes/">https://hexo.io/themes</a>**</p><p>在这里我采用的是Fluid主题，使用方式见：</p><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><ol><li>在&#x2F;Desktop&#x2F;Blog&#x2F;source中创建图片文件夹，通过语法插入：</li></ol><p><code>![alt](/images/name.jpg)</code></p><ol start="2"><li>在”_config.yml”中将以下代码由false改为true</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mac">post_asset_folder: true<br>relative_link: true<br></code></pre></td></tr></table></figure><p>注意将**”url:”**改为自己的仓库名</p><p>之后创建文档时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">hexo new post_name<br></code></pre></td></tr></table></figure><p>可将每个文档生成同名文件夹，将图片放在对应同名文件夹中，由此可以直接引用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">![描述](name.jpg)<br></code></pre></td></tr></table></figure><p>以前的旧文档可手动创建同名文件夹。</p><p>如果以上不行的话，便增加插件，在Blog目录下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">npm install hexo-asset-image --save<br></code></pre></td></tr></table></figure><p>打开配置文件_config.yml将 post_asset_folder，从false改成true</p><p>打开Desktop&#x2F;Blog&#x2F;node_modules&#x2F;hexo-asset-image&#x2F;index.js</p><p>将内容更换为下面的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs mac">&#x27;use strict&#x27;;<br>var cheerio = require(&#x27;cheerio&#x27;);<br><br>// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string<br>function getPosition(str, m, i) &#123;<br>  return str.split(m, i).join(m).length;<br>&#125;<br><br>var version = String(hexo.version).split(&#x27;.&#x27;);<br>hexo.extend.filter.register(&#x27;after_post_render&#x27;, function(data)&#123;<br>  var config = hexo.config;<br>  if(config.post_asset_folder)&#123;<br>        var link = data.permalink;<br>    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)<br>       var beginPos = getPosition(link, &#x27;/&#x27;, 1) + 1;<br>    else<br>       var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1;<br>    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.<br>    var endPos = link.lastIndexOf(&#x27;/&#x27;) + 1;<br>    link = link.substring(beginPos, endPos);<br><br>    var toprocess = [&#x27;excerpt&#x27;, &#x27;more&#x27;, &#x27;content&#x27;];<br>    for(var i = 0; i &lt; toprocess.length; i++)&#123;<br>      var key = toprocess[i];<br> <br>      var $ = cheerio.load(data[key], &#123;<br>        ignoreWhitespace: false,<br>        xmlMode: false,<br>        lowerCaseTags: false,<br>        decodeEntities: false<br>      &#125;);<br><br>      $(&#x27;img&#x27;).each(function()&#123;<br>        if ($(this).attr(&#x27;src&#x27;))&#123;<br>            // For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.<br>            var src = $(this).attr(&#x27;src&#x27;).replace(&#x27;\\&#x27;, &#x27;/&#x27;);<br>            if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;<br>               !/^\s*\//.test(src)) &#123;<br>              // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.<br>              // In addition, to support multi-level local directory.<br>              var linkArray = link.split(&#x27;/&#x27;).filter(function(elem)&#123;<br>                return elem != &#x27;&#x27;;<br>              &#125;);<br>              var srcArray = src.split(&#x27;/&#x27;).filter(function(elem)&#123;<br>                return elem != &#x27;&#x27; &amp;&amp; elem != &#x27;.&#x27;;<br>              &#125;);<br>              if(srcArray.length &gt; 1)<br>                srcArray.shift();<br>              src = srcArray.join(&#x27;/&#x27;);<br>              $(this).attr(&#x27;src&#x27;, config.root + link + src);<br>              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);<br>            &#125;<br>        &#125;else&#123;<br>            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);<br>            console.info&amp;&amp;console.info($(this));<br>        &#125;<br>      &#125;);<br>      data[key] = $.html();<br>    &#125;<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>链接：<a href="https://www.jianshu.com/p/f72aaad7b852">https://www.jianshu.com/p/f72aaad7b852</a></p><ol start="3"><li>利用DNS云存储直接插入url</li></ol><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>首先在域名服务商处申请一个域名。</p><p>国内：阿里云，腾讯云，华为云等</p><p>国外：namesilo, name, namecheap等</p><p>注意的是：</p><ol><li><p>国内域名需要通过实名认证，国外仅需填写部分信息就可。</p></li><li><p>如果自己想租用云服务器搭建，境外主机不需要备份，国内&#x2F;国外域名均可。</p><p>境内主机必须要国内代理的域名，并且需要备案（备案较为繁琐）。</p></li></ol><p>我个人在namesilo代理注册：<a href="https://www.namesilo.com./">https://www.namesilo.com。</a></p><p>下面便利它为例子：</p><p>购买教程为：<a href="https://namesilo-china.com/">https://namesilo-china.com</a> ，其它网站购买也是类似的。</p><p>注意要先注册账号，并且填写好个人信息后再去购买.确保右上角头像显示的信息是正确的</p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/3.png" alt="fig3"></p><p>购买完成后进入My Acount界面右上角点击Manage My Domains出先购买的域名</p><p>点击右边的蓝色小球（下图红圈标出），配置DNS</p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/4.png" alt="fig4"></p><p>将已有的DNS信息全部删除，往下翻可以看到网站已经提供了Github的模版，直接点击Apply Template便可。使用模版前保证自己的DNS信息是空的。</p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/5.png" alt="fig5"></p><p>然后点击CNAME添加一条信息，只要输入www以及将地址改为你的GitHub个人网网站地址便可，地址为:username.github.io。具体见下图</p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/6.png" alt="fig6"></p><p>如果使用其它网站代理的却没有模版的可以手动输入，保证DNS信息除了最后一条地址改为自己的GIthub地址其它信息和上面一致。要注意的是前四条类型为A最后一条类型为CHAME。</p><p>接着在自己Desktop&#x2F;Blog&#x2F;sourse文件夹中创建CNAME的无类型文件。打开后（可以用文本或者代码编辑器）输入你的域名（没有www.）比如我的便是xiangjichn.com。注意一定要没有类型，没有后缀名。我是利用VS code直接新建的文件。</p><p>接着在终端Blog文件夹命令下输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mac">hexo c<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>同步到Github上。</p><p>进入GIthub自己的仓库，点击Settings-Pages。</p><p>域名的解析需要一段时间，解析成功后可以看到Custom domain下为个人域名且DNS Check Sucessful。有的时候解析时间较长，会出现失败提示，等待域名解析成功后点击重新check便可。我大概解析了几分钟时间。</p><p>之后便可以正常访问了，建议把下面的<strong>Enforce HTTPs</strong>选项打开这样采取加密数据包，更安全，打开网站也不容易出现危险提示。</p><p><img src="/2022/08/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(mac)/7.png" alt="fig7"></p><p>之后便可以直接在个人域名中访问自己网站了，哪怕是打开自己原来的仓库个人网页user.github.io也会跳转到这个域名上去。</p><h1 id="一些操作总结"><a href="#一些操作总结" class="headerlink" title="一些操作总结"></a>一些操作总结</h1><h3 id="常用代码"><a href="#常用代码" class="headerlink" title="常用代码"></a>常用代码</h3><p>进入桌面Blog文件夹：</p><p><code>  cd Desktop/Blog</code></p><p>清理：<code>hexo c</code></p><p>生成：<code>hexo g</code> </p><p>同步：<code>hexo d</code></p><p>启动：<code>hexo s</code></p><p>进入博客网站，本地网址为</p><p><a href="http://localhost:4000/">http://localhost:4000</a></p><h3 id="发布新文章："><a href="#发布新文章：" class="headerlink" title="发布新文章："></a>发布新文章：</h3><p><code>hexo n&quot;文件名&quot;</code></p><p>该操作会建立一新的md格式的文件，地址为Desktop&#x2F;Blog&#x2F;sourse&#x2F;_posts</p><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mac">hexo c<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>便可更新到Gethub上</p><p>过一小段时间在个人网址上便会同步</p><p>或者进入本地网址查看</p><p><code>hexo s</code></p><p><a href="http://localhost:4000/">http://localhost:4000</a></p><h1 id="hexo-Quick-Start-文档"><a href="#hexo-Quick-Start-文档" class="headerlink" title="hexo Quick Start 文档"></a>hexo Quick Start 文档</h1><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">$ hexo new &quot;My New Post&quot;<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mac">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
